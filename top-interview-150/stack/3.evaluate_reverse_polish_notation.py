"""
You are given an array of strings tokens that represents an arithmetic expression in a Reverse Polish Notation.

Evaluate the expression. Return an integer that represents the value of the expression.

Note that:

The valid operators are '+', '-', '*', and '/'.
Each operand may be an integer or another expression.
The division between two integers always truncates toward zero.
There will not be any division by zero.
The input represents a valid arithmetic expression in a reverse polish notation.
The answer and all the intermediate calculations can be represented in a 32-bit integer.
"""
from typing import List
import operator
import math


def evaluate(tokens: List[str]) -> int:
    operators = {'-': operator.sub, '+': operator.add, '*': operator.mul, '/': operator.truediv}
    if len(tokens) == 1:
        return int(tokens[0])
    stack = []
    for token in tokens:
        if token in operators:
            n = operators[token](int(stack[-2]), int(stack[-1]))
            stack.pop()
            stack.pop()
            stack.append(n)
        else:
            stack.append(token)
    return math.floor(stack[0])


if __name__ == '__main__':
    items = [
        (["2", "1", "+", "3", "*"], 9),
        (["4", "13", "5", "/", "+"], 6),
        (["10", "6", "9", "3", "+", "-11", "*", "/", "*", "17", "+", "5", "+"], 22),
        (["18"], 18),
        (["3", "11", "+", "5", "-"], 9),
        (["3", "-4", "+"], -1),
        (["3", "11", "5", "+", "-"], -13),
        (["4", "-2", "/", "2", "-3", "-", "-"], -7),
        (
            ["-8", "23", "8", "-", "9", "23", "-", "-", "*", "33", "-8", "/", "+", "38", "-14", "-", "-", "-7", "32",
             "-19", "-", "11", "+", "+", "+", "14", "22", "-", "-", "27", "-9", "-", "+", "31", "+", "-12", "-11", "-",
             "-", "14", "+", "30", "+", "37", "30", "-", "+", "-9", "+", "7", "-", "37", "+", "-5", "13", "/", "-",
             "19", "-2", "-19", "12", "+", "-", "23", "+", "-", "-19", "-", "+", "6", "+", "-17", "+", "17", "+", "5",
             "36", "+", "-10", "+", "+", "23", "-8", "-", "-", "18", "-", "31", "-16", "-", "+", "34", "+", "-6", "+",
             "24", "-", "22", "-", "-8", "-", "28", "+", "-12", "+", "39", "28", "-7", "+", "+", "-14", "5", "+", "5",
             "+", "10", "+", "+", "+", "-18", "*", "10", "+", "-5", "11", "-", "6", "+", "-", "-12", "31", "+", "+",
             "30", "29", "-", "-", "39", "+", "13", "-8", "-5", "+", "-", "26", "19", "-", "*", "-", "10", "-", "-20",
             "5", "+", "+", "0", "-", "28", "-", "19", "/", "28", "+", "-18", "-", "28", "20", "+", "-5", "-19", "+",
             "+", "-", "-12", "-", "3", "-", "6", "-15", "+", "4", "-", "-", "38", "+", "-9", "-", "38", "-", "12",
             "-20", "-", "10", "5", "-15", "-", "-", "-", "+", "-11", "+", "5", "+", "2", "-", "28", "+", "-9", "-11",
             "-", "+", "37", "-", "-17", "31", "-", "2", "+", "+", "-16", "-12", "-", "-", "12", "+", "34", "-", "15",
             "+", "8", "+", "17", "-", "2", "-", "33", "+", "-5", "+", "14", "+", "29", "-", "33", "23", "+", "26",
             "30", "-", "+", "+", "39", "+", "9", "24", "-", "-", "20", "15", "+", "-", "24", "+", "37", "-", "30",
             "-1", "-", "+", "34", "+", "-13", "-", "23", "15", "-", "-", "-5", "-8", "8", "30", "35", "-9", "22", "+",
             "-", "-", "36", "-1", "+", "5", "-", "-", "+", "25", "-", "+", "27", "-", "16", "+", "+", "+", "39", "-",
             "15", "-", "-3", "+", "5", "-6", "-", "+", "-6", "-15", "-7", "-", "+", "/", "13", "-", "18", "+", "4",
             "+", "29", "+", "-17", "0", "-6", "-20", "-17", "+", "12", "-", "+", "-", "+", "+", "-10", "22", "+", "+",
             "-11", "-", "-2", "38", "-", "-", "-6", "+", "0", "-", "-10", "+", "-4", "-10", "+", "-", "0", "-", "31",
             "30", "-", "37", "5", "+", "+", "+", "-15", "+", "38", "4", "-", "-16", "-17", "+", "+", "+", "38", "-",
             "27", "-19", "/", "12", "+", "/"], 11
        )
    ]
    for item in items:
        print(item[1] == evaluate(item[0]), evaluate(item[0]), item[1])
